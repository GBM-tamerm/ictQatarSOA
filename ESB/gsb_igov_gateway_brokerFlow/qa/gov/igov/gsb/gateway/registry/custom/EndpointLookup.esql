BROKER SCHEMA qa.gov.igov.gsb.gateway.registry.custom
DECLARE regSchema EXTERNAL CHARACTER 'ADMINISTRATOR';
DECLARE regTable  EXTERNAL CHARACTER 'GW_EPLOOKUP';
CREATE COMPUTE MODULE EndpointLookup_RetreiveServicePolicy

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment.DBResult = THE(SELECT * FROM Database.ADMINISTRATOR.GW_EPLOOKUP as e where e.SERVICE_LOOKUP_KEY = Environment.igov.service.lookupKey);
		IF NOT EXISTS(OutputLocalEnvironment.DBResult[]) THEN
			THROW USER EXCEPTION CATALOG 'igovExCatalog' MESSAGE 9750 VALUES ('Endpoint Not Found','No endpoint registered for the request', ('Service ID: ' || Environment.igov.service.lookupKey || ' does not have a matching service endpoint in the registry'));
		END IF;
		SET Environment.igov.service.channel = OutputLocalEnvironment.DBResult.SERVICE_ENDPOINT_PROTOCOL;
		SET Environment.igov.service.endpoint = OutputLocalEnvironment.DBResult.SERVICE_ENDPOINT_URI;
		SET Environment.igov.service.timeout = OutputLocalEnvironment.DBResult.SERVICE_TIMEOUT;
		SET Environment.igov.service.maxRetryCount = OutputLocalEnvironment.DBResult.SERVICE_MAX_RETRY_COUNT;
		SET Environment.igov.service.retryInterval = OutputLocalEnvironment.DBResult.SERVICE_RETRY_INTERVAL;
	
		DECLARE qResults CHARACTER;
		SET qResults = '{channel=' || Environment.igov.service.channel || '. endpoint=' || Environment.igov.service.endpoint || '. timeout=' || (CAST(Environment.igov.service.timeout AS CHARACTER)) || '. retryInterval=' || (CAST(Environment.igov.service.retryInterval AS CHARACTER)) || '. maxRetryCount=' || (CAST(Environment.igov.service.maxRetryCount AS CHARACTER)) || '}' ;
		SET Environment.Variables.Log4j.LogText = Environment.Variables.Log4j.LogPrefix || 'queryResults: ' || qResults;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;